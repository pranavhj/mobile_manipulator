<?xml version="1.0"?>
<launch>
  <arg name="paused" default="false"/>
  <arg name="gazebo_gui" default="true"/>
  <arg name="limited" default="true"/>
  <arg name="transmission_hw_interface" default="hardware_interface/PositionJointInterface" />

  <!-- startup simulated world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" default="worlds/empty.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gazebo_gui)"/>
    <arg name="verbose" value="true"/>
  </include>

  <!-- send robot urdf to param server -->
  <param unless="$(arg limited)" name="robot_description" command="$(find xacro)/xacro --inorder '$(find ur_description)/urdf/ur5_robot.urdf.xacro' transmission_hw_interface:=$(arg transmission_hw_interface)" />
  
  <param if="$(arg limited)" name="robot_description" command="$(find xacro)/xacro --inorder '$(find ur_description)/urdf/ur5_joint_limited_robot.urdf.xacro' transmission_hw_interface:=$(arg transmission_hw_interface)" />

  <!-- push robot_description to factory and spawn robot in gazebo at the origin, change x,y,z arguments to spawn in a different position -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model ur5 -x 0 -y 0 -z 0.5"
    respawn="false" output="screen" />

  <!-- Load joint controller configurations from YAML file to parameter server 
  <rosparam file="$(find demo_moveit_config)/config/ros_controllers.yaml" command="load"/>-->

  


  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0" />
    <param name="tf_prefix" type="string" value="" />
  </node>

  <!-- Fake Calibration -->
  <node pkg="rostopic" type="rostopic" name="fake_joint_calibration"
        args="pub /calibrated std_msgs/Bool true" />
  
  <!-- joint_state_controller --> 
  
  <node name="joint_state_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn joint_state_controller" respawn="false"  output="screen"/>
 


  <!-- joint_state_controller -->

  <include file="$(find demo_moveit_config)/launch/ros_controllers.launch"/>
  

  
  <!--
  <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager"  args="spawn arm_controller" respawn="false" output="screen"/>--> 



  <!--load other controllers-->
  <node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false" output="screen"  />


</launch>
